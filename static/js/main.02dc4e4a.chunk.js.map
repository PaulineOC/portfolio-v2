{"version":3,"sources":["data/projects/images/ColorFactoryReexamination/ColorConstancy.png","data/projects/images/ColorFactoryReexamination/NewtonsRainbow.png","views/home/index.jsx","views/about/index.jsx","data/projects/index.js","stores/ProjectStore/index.jsx","stores/ProjectStore/ProjectStore.jsx","views/projects/index.jsx","stores/history.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Portfolio","observer","props","React","Component","withRouter","About","projects","title","url","categories","images","ColorFactory1","ColorFactory2","description","thumbnail","this","allProjects","observable","Projects","Container","GridList","ProjectStore","map","proj","ind","GridListTile","src","GridListTileBar","subtitle","join","actionIcon","IconButton","aria-label","createBrowserHistory","App","basename","to","path","component","exact","Home","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.02dc4e4a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ColorConstancy.a0ecf38d.png\";","module.exports = __webpack_public_path__ + \"static/media/NewtonsRainbow.e1151d49.png\";","import React from 'react';\nimport { observer } from 'mobx-react';\nimport { Container, Button } from '@material-ui/core';\n\n// import styles from './menu.module.css'\n\nimport {withRouter} from 'react-router';\n\n// import MainImage from '../../data/images/Title.png';\n\n@observer\nclass Portfolio extends React.Component {\n\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        return(\n            <p>HOME</p>\n        );\n    }\n}\n\nexport default withRouter(Portfolio);\n","import React from 'react';\nimport { observer } from 'mobx-react';\nimport { Container, Button } from '@material-ui/core';\n\n// import styles from './menu.module.css'\n\nimport {withRouter} from 'react-router';\n\n// import MainImage from '../../data/images/Title.png';\n\n@observer\nclass About extends React.Component {\n\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        return(\n            <p>About Me - nothing</p>\n        );\n    }\n}\n\nexport default withRouter(About);\n","import ColorFactory1 from './images/ColorFactoryReexamination/ColorConstancy.png';\nimport ColorFactory2 from './images/ColorFactoryReexamination/NewtonsRainbow.png';\n\nconst projects = [\n    {\n        title: `The Color Factory Reexamination`,\n        url: 'https://drive.google.com/drive/folders/155snCOTM7ZSSS_8btGyi4rey5ck3Eo8u',\n        categories: ['Museum'],\n        images: [\n            ColorFactory1,\n            ColorFactory2,\n        ],\n        // thumbnail: ColorFactory1,\n        description: `This ongoing project re-imagines the popular Color Factory pop-up. Its redesign aims to borrow lessons from the museum world and see how they can be adapted to the pop-up space.`,\n    },\n    {\n        title: `Movie Lynx`,\n        url: 'http://movie-lynx.com/',\n        categories: [`Digital`, 'Game',],\n        images: [\n            `https://github.com/PaulineOC/movie-lynx-app-react/blob/master/Example-Preview.png?raw=true`,\n            `https://raw.githubusercontent.com/PaulineOC/movie-lynx-app-react/master/Rules.png`,\n            `https://github.com/PaulineOC/movie-lynx-app-react/blob/master/Example-Correct.png?raw=true`,\n            `https://github.com/PaulineOC/movie-lynx-app-react/blob/master/Example-Incorrect.png?raw=true`,\n        ],\n        thumbnail: `https://github.com/PaulineOC/movie-lynx-app-react/blob/master/Example-Preview.png?raw=true`,\n        description: `Movie Lynx is a game where the player has to connect an origin actor to a target actor via their co-stars and the movies they acted in`,\n    },\n    {\n        title: `Tabula`,\n        url: 'https://www.kickstarter.com/projects/182736998/tabula-the-game',\n        categories: [`Game`],\n        images: [\n            `https://github.com/PaulineOC/Tabula/blob/master/staffpic.jpg?raw=true`,\n            `https://github.com/PaulineOC/Tabula/blob/master/Tabula.jpeg?raw=true`,\n            `https://github.com/PaulineOC/Tabula/raw/master/IMG_6026.JPG?raw=true`,\n            `https://github.com/PaulineOC/Tabula/raw/master/IMG_0188.JPG?raw=true`,\n            `https://github.com/PaulineOC/Tabula/blob/master/prototype.jpeg?raw=true`,\n        ],\n        thumbnail: `https://github.com/PaulineOC/Tabula/blob/master/Tabula.jpeg?raw=true`,\n        description: `Tabula is a wooden and abstract game that is designed to be its own box. Launched on Kickstarter in 2016 (and technically still wrapping up)`\n    },\n    {\n        title: `Star Pose Prototype`,\n        url: 'https://msrainwater-count-down.herokuapp.com/',\n        categories: [`Unity`],\n        images: [\n            `https://github.com/PaulineOC/StarPose-Documentation/blob/master/STARPOSE.jpg?raw=true`,\n            `https://github.com/PaulineOC/StarPose-Documentation/blob/master/starpose-user-1.jpg?raw=true`,\n            `https://github.com/PaulineOC/StarPose-Documentation/blob/master/starpose-user-2.jpg?raw=true`,\n            `https://github.com/PaulineOC/StarPose-Documentation/blob/master/starpose-user-3.jpg?raw=true`,\n        ],\n        thumbnail: `https://github.com/PaulineOC/StarPose-Documentation/blob/master/STARPOSE.jpg?raw=true`,\n        description: `Star Pose is an interactive installation from the American Museum of Natural History where people mimic the constellations with their bodies. It highlights how stars exist in three-dimensional space. This was part of my internship at the museum in 2018.`,\n    },\n    {\n        title: `Count Down`,\n        url: 'https://msrainwater-count-down.herokuapp.com/',\n        categories: [`web`],\n        images: [\n            `https://github.com/PaulineOC/CountDown/blob/master/Example.png?raw=true`,\n            `https://raw.githubusercontent.com/PaulineOC/CountDown/master/CountdownGif.gif`,\n        ],\n        thumbnail: `https://github.com/PaulineOC/CountDown/blob/master/Example.png?raw=true`,\n        description: `Count Down is a visualization of procrastination inspired by the Five Second Rule popularized by motivational speaker, Mel Robbins.`,\n    },\n    {\n        title: `Super Tic Tac Toe`,\n        url: 'https://msrainwater-super-tic-tac-toe.herokuapp.com/index.html',\n        categories: [`web`, 'game', 'React'],\n        images: [\n            `https://raw.githubusercontent.com/PaulineOC/SuperTicTacToe/master/Screenshots/Example.png`,\n            `https://raw.githubusercontent.com/PaulineOC/SuperTicTacToe/master/SuperTicTacToe.gif`,\n            `https://github.com/PaulineOC/SuperTicTacToe/blob/master/Screenshots/Rules.png?raw=true`,\n            `https://github.com/PaulineOC/SuperTicTacToe/blob/master/Screenshots/Winner.png?raw=true`,\n        ],\n        thumbnail: `https://raw.githubusercontent.com/PaulineOC/SuperTicTacToe/master/Screenshots/Example.png`,\n        description: `Super Tic Toe is the lesser-known expansion of the popular game `,\n    },\n    {\n        title: `Character Creator`,\n        url: 'https://github.com/PaulineOC/CharacterCreator',\n        categories: [`web`],\n        images: [\n            `https://github.com/PaulineOC/CharacterCreator/blob/master/DemoGif.gif?raw=true`,\n        ],\n        thumbnail: `https://github.com/PaulineOC/CharacterCreator/blob/master/DemoGif.gif?raw=true`,\n        description: `Character Creator is an early prototype for character customization for Scholastic's recently-released game, Home Base.`,\n    },\n    {\n        title: `Chain the Rainbow`,\n        url: ``,\n        categories: [`game`],\n        images: [\n            `https://github.com/PaulineOC/Chain-the-Rainbow/blob/master/C.jpg?raw=true`,\n            `https://github.com/PaulineOC/Chain-the-Rainbow/blob/master/IMG_3734.jpg?raw=true`,\n            `https://github.com/PaulineOC/Chain-the-Rainbow/blob/master/D.jpg?raw=true`,\n            `https://github.com/PaulineOC/Chain-the-Rainbow/blob/master/-rotated-IMG_3735.jpg?raw=true`,\n        ],\n        thumbnail: `https://github.com/PaulineOC/Chain-the-Rainbow/blob/master/C.jpg?raw=true`,\n        description: `Chain the Rainbow is a game where players must secure the most of their Winning Color on the board. Colors must be chained on the board in ROYGBIV order.`,\n    },\n    {\n        title: `Cuba! Prototype`,\n        url: `https://github.com/PaulineOC/AMNH-Cuba-Prototype`,\n        categories: [`game`],\n        images: [\n            `https://github.com/PaulineOC/AMNH-Cuba-Prototype/blob/master/img3.JPG?raw=true`,\n            `https://github.com/PaulineOC/AMNH-Cuba-Prototype/blob/master/image-cropped.jpeg?raw=true`,\n            `https://github.com/PaulineOC/AMNH-Cuba-Prototype/blob/master/156310708.jpg?raw=true`,\n        ],\n        thumbnail: `https://github.com/PaulineOC/AMNH-Cuba-Prototype/blob/master/img3.JPG?raw=true`,\n        description: `Cuba! is about how museum-based scientists advance knowledge. It was part of the American Museum of Natural History's after-school class, #scienceFTW, that combined the topics of educational game design and the history of the AMNH’s expeditions to Cuba .`,\n    },\n];\n\n//\tthumbnail: `https://github.com/PaulineOC/DigitalResearchArchivePrototype/blob/master/AMNH-Redone.png?raw=true`,\n\nexport default projects;\n","import ProjectStore from './ProjectStore';\nexport default new ProjectStore();\n","import {observable, action} from 'mobx';\n\nimport projects from '../../data/projects';\n\nclass ProjectStore {\n\n    constructor(){\n        this.allProjects = projects;\n    }\n\n    @observable\n    allProjects = [];\n\n    @observable\n    currentProj = null;\n}\n\nexport default ProjectStore;\n","import React from 'react';\nimport { observer } from 'mobx-react';\nimport { Container, Button, GridList, GridListTile, GridListTileBar,  } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport InfoIcon from '@material-ui/icons/Info';\n\n\n// import styles from './menu.module.css'\n\nimport ProjectStore from '../../stores/ProjectStore';\n\nimport {withRouter} from 'react-router';\n\n// import MainImage from '../../data/images/Title.png';\n\n@observer\nclass Projects extends React.Component {\n\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        return(\n            <Container>\n                <GridList>\n                    {ProjectStore.allProjects.map((proj,ind)=>\n                        <GridListTile>\n                            <img src={proj.images[0]}/>\n\n                            <GridListTileBar\n                                title={proj.title}\n                                subtitle={<span>{proj.categories.join(', ')}</span>}\n                                actionIcon={\n                                    <IconButton aria-label={`info about ${proj.title}`}>\n                                        <InfoIcon />\n                                    </IconButton>\n                                }\n                            />\n                        </GridListTile>\n                    )}\n                </GridList>\n\n            </Container>\n        );\n    }\n}\n\nexport default withRouter(Projects);\n","import { createBrowserHistory } from 'history';\nconst routerHistory = createBrowserHistory();\nexport default routerHistory;\n","import React from \"react\";\nimport {\n    HashRouter,\n    Switch,\n    Route,\n    Link,\n    useRouteMatch,\n    useParams,\n    BrowserRouter,\n} from 'react-router-dom';\n\nimport Home from './views/home';\nimport About from './views/about';\nimport Projects from './views/projects';\n\n\nimport routerHistory from './stores/history';\n\nexport default function App() {\n    return (\n        <BrowserRouter basename=\"/portfolio-v2\">\n            <div>\n                <ul>\n                    <li><Link to=\"/\">Home</Link></li>\n                    <li><Link to=\"/about\">About</Link></li>\n                    <li><Link to=\"/work\">Project</Link></li>\n                </ul>\n\n                <hr />\n                <Route path=\"/about\" component={About} />\n                <Route path=\"/work\" component={Projects} />\n                <Route exact path=\"/\" component={Home} />\n            </div>\n        </BrowserRouter>\n    );\n    // return (\n    //     <p>hi</p>\n    // );\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}