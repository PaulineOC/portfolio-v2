{"version":3,"sources":["data/images/Title.png","views/about/index.jsx","views/portfolio/index.jsx","views/menu/index.jsx","stores/history.js","App.js","serviceWorker.js","index.js","views/menu/menu.module.css"],"names":["module","exports","About","observer","props","React","Component","withRouter","Portfolio","Menu","onMultiplayerClick","history","push","Container","className","styles","container","title","imageContainer","src","MainImage","mainImage","buttonContainer","Button","variant","onClick","this","multiplayer","startIcon","href","singleplayer","target","rules","aboutCollection","footnote","routerHistory","createBrowserHistory","App","path","component","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sGAAAA,EAAOC,QAAU,IAA0B,mC,0MCWrCC,EADLC,Y,oDAGG,WAAYC,GAAO,uCACTA,G,qDAIN,OACI,qD,GARQC,IAAMC,a,EAaXC,cAAWL,GCbpBM,EADLL,Y,oDAGG,WAAYC,GAAO,uCACTA,G,qDAIN,OACI,4C,GARYC,IAAMC,a,EAafC,cAAWC,G,qHCRpBC,EADLN,Y,oDAGG,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAGVM,mBAAqB,WACjB,EAAKN,MAAMO,QAAQC,KAAK,iBALV,E,qDASd,OACI,kBAACC,EAAA,EAAD,CAAWC,UAAWC,IAAOC,WACzB,wBAAIF,UAAWC,IAAOE,OAAtB,iBACA,wIACA,yBAAKH,UAAWC,IAAOG,gBACnB,yBAAKC,IAAKC,IAAWN,UAAWC,IAAOM,aAG3C,yBAAKP,UAAWC,IAAOO,iBACnB,kBAACC,EAAA,EAAD,CAAQC,QAAQ,YACRC,QAASC,KAAKhB,mBACdI,UAAWC,IAAOY,YAClBC,UAAW,kBAAC,IAAD,OAHnB,gBAQJ,yBAAKd,UAAWC,IAAOO,iBACnB,kBAACC,EAAA,EAAD,CAAQC,QAAQ,YACRK,KAAK,6BACLf,UAAWC,IAAOe,aAClBC,OAAO,SACPH,UAAW,kBAAC,IAAD,OAJnB,kBAUJ,yBAAKd,UAAWC,IAAOO,iBACnB,kBAACC,EAAA,EAAD,CAAQC,QAAQ,YACRV,UAAWC,IAAOiB,MAClBD,OAAO,SACPH,UAAW,kBAAC,IAAD,OAHnB,UASJ,yBAAKd,UAAWC,IAAOO,iBACnB,kBAACC,EAAA,EAAD,CAAQC,QAAQ,YACRK,KAAK,oGACLf,UAAWC,IAAOkB,gBAClBF,OAAO,SACPH,UAAW,kBAAC,IAAD,OAJnB,yBAUJ,uBAAGd,UAAWC,IAAOmB,UAArB,gF,GA5DG7B,IAAMC,a,KAqEVC,YAAWE,G,OCnFX0B,EADOC,cCeP,SAASC,IACpB,OACI,kBAAC,IAAD,CAAe1B,QAASwB,GACpB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOG,KAAK,SAASC,UAAWrC,EAAOsC,OAAO,IAC9C,kBAAC,IAAD,CAAOF,KAAK,aAAaC,UAAW/B,EAAWgC,OAAO,MCTlDC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACX,EAAD,OAEFY,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a,kBExI5B5D,EAAOC,QAAU,CAAC,UAAY,wBAAwB,MAAQ,oBAAoB,eAAiB,6BAA6B,UAAY,wBAAwB,gBAAkB,8BAA8B,YAAc,0BAA0B,aAAe,2BAA2B,MAAQ,oBAAoB,gBAAkB,8BAA8B,SAAW,0B","file":"static/js/main.32265664.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Title.52c37a83.png\";","import React from 'react';\nimport { observer } from 'mobx-react';\nimport { Container, Button } from '@material-ui/core';\n\n// import styles from './menu.module.css'\n\nimport {withRouter} from 'react-router';\n\n// import MainImage from '../../data/images/Title.png';\n\n@observer\nclass About extends React.Component {\n\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        return(\n            <p>About Me - nothing</p>\n        );\n    }\n}\n\nexport default withRouter(About);\n","import React from 'react';\nimport { observer } from 'mobx-react';\nimport { Container, Button } from '@material-ui/core';\n\n// import styles from './menu.module.css'\n\nimport {withRouter} from 'react-router';\n\n// import MainImage from '../../data/images/Title.png';\n\n@observer\nclass Portfolio extends React.Component {\n\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        return(\n            <p>portfolio</p>\n        );\n    }\n}\n\nexport default withRouter(Portfolio);\n","import React from 'react';\nimport { observer } from 'mobx-react';\nimport { Container, Button } from '@material-ui/core';\n\nimport PersonIcon from '@material-ui/icons/Person';\nimport GroupIcon from '@material-ui/icons/Group';\nimport MenuBook from '@material-ui/icons/MenuBook';\nimport HelpIcon from '@material-ui/icons/Help';\n\nimport styles from './menu.module.css'\n\nimport {withRouter} from 'react-router';\n\nimport MainImage from '../../data/images/Title.png';\n\n@observer\nclass Menu extends React.Component {\n\n    constructor(props){\n        super(props);\n    }\n\n    onMultiplayerClick = () => {\n        this.props.history.push('/multiplayer');\n    };\n\n    render(){\n        return(\n            <Container className={styles.container}>\n                <h1 className={styles.title}>Find the One!</h1>\n                <h3>An online, multiplayer Guess Who! featuring Peter Marie's Beauties of New York Collection from the N-YHS</h3>\n                <div className={styles.imageContainer}>\n                    <img src={MainImage} className={styles.mainImage}/>\n                </div>\n\n                <div className={styles.buttonContainer}>\n                    <Button variant=\"contained\"\n                            onClick={this.onMultiplayerClick}\n                            className={styles.multiplayer}\n                            startIcon={<GroupIcon/>}\n                    >\n                        Multiplayer\n                    </Button>\n                </div>\n                <div className={styles.buttonContainer}>\n                    <Button variant=\"contained\"\n                            href=\"https://www.covidopoly.io/\"\n                            className={styles.singleplayer}\n                            target=\"_blank\"\n                            startIcon={<PersonIcon/>}\n                    >\n                        Single player\n                    </Button>\n                </div>\n\n                <div className={styles.buttonContainer}>\n                    <Button variant=\"contained\"\n                            className={styles.rules}\n                            target=\"_blank\"\n                            startIcon={<HelpIcon/>}\n                    >\n                        Rules\n                    </Button>\n                </div>\n\n                <div className={styles.buttonContainer}>\n                    <Button variant=\"contained\"\n                            href=\"https://emuseum.nyhistory.org/collections/92586/peter-maries-beauties-of-new-york-society/objects\"\n                            className={styles.aboutCollection}\n                            target=\"_blank\"\n                            startIcon={<MenuBook/>}\n                    >\n                        About the Collection\n                    </Button>\n                </div>\n\n                <p className={styles.footnote}>\n                    Prototyped by Pauline for the Museum and Interactive Technologies Class\n                </p>\n            </Container>\n\n        );\n    }\n}\n\nexport default withRouter(Menu);\n","import { createBrowserHistory } from 'history';\nconst routerHistory = createBrowserHistory();\nexport default routerHistory;\n","import React from \"react\";\nimport {\n    BrowserRouter,\n    Switch,\n    Route,\n    Link,\n    useRouteMatch,\n    useParams\n} from \"react-router-dom\";\nimport About from './views/about';\nimport Portfolio from './views/portfolio'\n\nimport Menu from './views/menu';\n\nimport routerHistory from './stores/history';\n\nexport default function App() {\n    return (\n        <BrowserRouter history={routerHistory}>\n            <Switch>\n                <Route path=\"/about\" component={About} exact={true}/>\n                <Route path=\"/portfolio\" component={Portfolio} exact={true}/>\n            </Switch>\n        </BrowserRouter>\n    );\n    // return (\n    //     <p>hi</p>\n    // );\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"menu_container__3yAWK\",\"title\":\"menu_title__3A_fN\",\"imageContainer\":\"menu_imageContainer__iAQxX\",\"mainImage\":\"menu_mainImage__VqYeB\",\"buttonContainer\":\"menu_buttonContainer__3QhLa\",\"multiplayer\":\"menu_multiplayer__ao2wK\",\"singleplayer\":\"menu_singleplayer__7T7jP\",\"rules\":\"menu_rules__3esvK\",\"aboutCollection\":\"menu_aboutCollection__1WPmm\",\"footnote\":\"menu_footnote__yHvNo\"};"],"sourceRoot":""}